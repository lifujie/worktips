package runtime

func printMemory() {
	print("maxTinySize(_TinySize): ", maxTinySize)
	print("tinySizeClass(_TinySizeClass): ", tinySizeClass)
	print("maxSmallSize(_MaxSmallSize): ", maxSmallSize)
	print("pageShift(_PageShift): ", pageShift)
	print("pageSize(_PageSize): ", pageSize)
	print("pageMask(_PageMask): ", pageMask)
	print("maxObjsPerSpan(pageSize / 8): ", maxObjsPerSpan)
	print("concurrentSweep(_ConcurrentSweep): ", concurrentSweep)
	print("_64bit: ", _64bit)
	print("_TinySize: ", _TinySize)
	print("_TinySizeClass: ", _TinySizeClass)
	print("_FixAllocChunk: ", _FixAllocChunk)
	print("_StackCacheSize: ", _StackCacheSize)
	print("_NumStackOrders: ", _NumStackOrders)
	print("heapAddrBits: ", heapAddrBits)
	print("maxAlloc: ", maxAlloc)
	print("heapArenaBytes: ", heapArenaBytes)
	print("logHeapArenaBytes: ", logHeapArenaBytes)
	print("heapArenaBitmapBytes: ", heapArenaBitmapBytes)
	print("pagesPerArena(heapArenaBytes / pageSize): ", pagesPerArena)
	print("arenaL1Bits: ", arenaL1Bits)
	print("arenaL2Bits: ", arenaL2Bits)
	print("arenaL1Shift(arenaL2Bits): ", arenaL1Shift)
	print("arenaBits(arenaL1Bits + arenaL2Bits): ", arenaBits)
	print("arenaBaseOffset: ", arenaBaseOffset)
	print("_MaxGcproc: ", _MaxGcproc)
	print("minLegalPointer: ", minLegalPointer)
	print("minPhysPageSize: ", minPhysPageSize)
	print("bitPointer: ", bitPointer)
	print("bitScanAll: ", bitScanAll)
	print("bitScan: ", bitScan)
	print("heapBitsShift: ", heapBitsShift)
	print("wordsPerBitmapByte: ", wordsPerBitmapByte)
	print("bitPointerAll: ", bitPointerAll)
	print("rootBlockBytes: ", rootBlockBytes)
	print("rootBlockSpans: ", rootBlockSpans)
	print("maxObletBytes: ", maxObletBytes)
	print("drainCheckThreshold: ", drainCheckThreshold)
}
